<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <cm:property-placeholder persistent-id="org.opennms.ng.capsd" id="org.opennms.ng.capsd" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="opennms.trapd.snmpTrapAddress" value="127.0.0.1"/>
            <cm:property name="opennms.trapd.snmpTrapPort" value="10062"/>
            <cm:property name="opennms.trapd.newSuspectOnTrap" value="false"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="opennmsServerConfig" interface="org.opennms.ng.services.opennmsserverconfig.OpennmsServerConfig" availability="mandatory"/>

    <reference id="jta" interface="javax.sql.DataSource"
               filter="(transactional=true)" availability="mandatory"/>

    <reference id="nonJTA" interface="javax.sql.DataSource"
               filter="(transactional=false)" availability="mandatory"/>

    <reference id="capsdConfig" interface="org.opennms.ng.services.capsdconfig.CapsdConfig" availability="mandatory"/>

    <reference id="pollerConfig" interface="org.opennms.ng.services.pollerconfig.PollerConfig" availability="mandatory"/>

    <reference id="collectdConfig" interface="org.opennms.ng.services.collectdconfig.CollectdConfig" availability="mandatory"/>

    <reference id="eventIpcManager" interface="org.opennms.netmgt.model.events.EventIpcManager" availability="mandatory"/>

    <!--
    <bean id="xmlRpcEnabled" factory-ref="capsdConfig" factory-method="isXmlRpcEnabled"/>
        -->
    <bean id="maxSuspectThreadPoolSize" factory-ref="capsdConfig" factory-method="getMaxSuspectThreadPoolSize"/>

    <bean id="maxRescanThreadPoolSize" factory-ref="capsdConfig" factory-method="getMaxRescanThreadPoolSize"/>

    <bean id="serverName" factory-ref="opennmsServerConfig" factory-method="getServerName"/>

    <bean id="xmlRpcNotifier" class="org.opennms.netmgt.capsd.XmlRpcEventHandlerNotifier">
        <!--
         <property name="xmlRpcEnabled" ref="xmlRpcEnabled"/>
            -->
        <property name="xmlRpcEnabled" value="false"/>

    </bean>

    <bean id="syncer" class="org.opennms.ng.services.capsd.JdbcCapsdDbSyncer" init-method="afterPropertiesSet">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="opennmsServerConfig" ref="opennmsServerConfig"/>
        <property name="capsdConfig" ref="capsdConfig"/>
        <property name="pollerConfig" ref="pollerConfig"/>
        <property name="collectdConfig" ref="collectdConfig"/>
    </bean>

    <bean id="pluginManager" class="org.opennms.ng.services.capsd.PluginManager" init-method="afterPropertiesSet">
        <property name="capsdConfig" ref="capsdConfig"/>
    </bean>

    <bean id="suspectEventProcessorFactory" class="org.opennms.ng.services.capsd.DefaultProcessorFactory">
        <property name="capsdDbSyncer" ref="syncer"/>
        <property name="pluginManager" ref="pluginManager"/>
        <property name="eventIpcManager" ref="eventIpcManager"/>
        <property name="capsdConfig" ref="capsdConfig"/>
        <property name="pollerConfig" ref="pollerConfig"/>
    </bean>

    <bean id="rescanProcessorFactory" class="org.opennms.ng.services.capsd.DefaultProcessorFactory">
        <property name="capsdDbSyncer" ref="syncer"/>
        <property name="pluginManager" ref="pluginManager"/>
        <property name="eventIpcManager" ref="eventIpcManager"/>
        <property name="capsdConfig" ref="capsdConfig"/>
        <property name="pollerConfig" ref="pollerConfig"/>
    </bean>

    <bean id="suspectRunner" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <argument ref="maxSuspectThreadPoolSize"/>
        <!-- <property name="name" value="Capsd Suspect Pool" /> -->
    </bean>

    <bean id="rescanRunner" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <argument ref="maxRescanThreadPoolSize"/>

        <!-- <property name="name" value="Capsd Rescan Pool" /> -->
    </bean>

    <bean id="capsdScheduler" class="org.opennms.ng.services.capsd.Scheduler" init-method="start">
        <argument ref="rescanRunner"/>
        <argument ref="rescanProcessorFactory"/>
        <argument ref="capsdConfig"/>
        <property name="eventIpcManager" ref="eventIpcManager"/>
    </bean>

    <bean id="capsdBroadcastProcessor" class="org.opennms.ng.services.capsd.BroadcastEventProcessor">
        <property name="scheduler" ref="capsdScheduler"/>
        <property name="suspectEventProcessorFactory" ref="suspectEventProcessorFactory"/>
        <property name="suspectQueue" ref="suspectRunner"/>
        <property name="localServer" ref="serverName"/>
        <property name="eventIpcManager" ref="eventIpcManager"/>
        <property name="capsdConfig" ref="capsdConfig"/>
        <property name="pollerConfig" ref="pollerConfig"/>

    </bean>

    <bean id="capsdEventListenerAdapter" class="org.opennms.netmgt.model.events.AnnotationBasedEventListenerAdapter" init-method="afterPropertiesSet">
        <property name="annotatedListener" ref="capsdBroadcastProcessor"/>
        <property name="eventSubscriptionService" ref="eventIpcManager"/>
    </bean>

    <!-- Need to get the constructor args in place first
      <bean id="capsdAnnotatedEventHandler" class="org.opennms.netmgt.capsd.BroadcastEventProcessor">
      </bean>
     -->

    <bean id="daemon" class="org.opennms.ng.services.capsd.Capsd">
        <property name="suspectRunner" ref="suspectRunner"/>
        <property name="rescanRunner" ref="rescanRunner"/>
        <property name="eventListener" ref="capsdEventListenerAdapter"/>
        <property name="eventIpcManager" ref="eventIpcManager"/>
        <property name="capsdConfig" ref="capsdConfig"/>
        <property name="pollerConfig" ref="pollerConfig"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <argument ref="nonJTA"/>
    </bean>

</blueprint>